{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/home/s/code/bluedit/web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/s/code/bluedit/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/s/code/bluedit/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"/home/s/code/bluedit/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _jsxFileName = \"/home/s/code/bluedit/web/src/pages/create-post.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Formik, Form } from \"formik\";\nimport { Layout } from \"../components/Layout\";\nimport { Button } from \"@chakra-ui/react\";\nimport { InputField } from \"../components/InputField\";\nimport { useCreatePostMutation } from \"../generated/graphql\";\nimport { useRouter } from \"next/router\";\nimport { withUrqlClient } from \"next-urql\";\nimport { createUrqlClient } from \"../utils/createUrqlClient\";\nexport var CreatePost = function CreatePost(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var _useCreatePostMutatio = useCreatePostMutation(),\n      _useCreatePostMutatio2 = _slicedToArray(_useCreatePostMutatio, 2),\n      createPost = _useCreatePostMutatio2[1];\n\n  var router = useRouter();\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    variant: \"small\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        title: '',\n        text: ''\n      },\n      onSubmit: /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n          var _yield$createPost, error;\n\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return createPost({\n                    input: values\n                  });\n\n                case 2:\n                  _yield$createPost = _context.sent;\n                  error = _yield$createPost.error;\n\n                  if (error !== null && error !== void 0 && error.message.includes(\"Not authenticated\")) {\n                    router.push('/login');\n                  } else {\n                    router.push('/');\n                  }\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }(),\n      children: function children(_ref3) {\n        var isSubmitting = _ref3.isSubmitting;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(InputField, {\n            textarea: false,\n            name: \"title\",\n            placeholder: \"title\",\n            label: \"title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(InputField, {\n            textarea: true,\n            name: \"text\",\n            placeholder: \"text...\",\n            label: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            mt: 4,\n            isLoading: isSubmitting,\n            type: \"submit\",\n            colorScheme: \"teal\",\n            children: \"Create post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CreatePost, \"iJ5BbFMcrnyZeWxcH0bWN8ui3As=\", false, function () {\n  return [useCreatePostMutation, useRouter];\n});\n\n_c = CreatePost;\nexport default withUrqlClient(createUrqlClient)(CreatePost);\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"sources":["/home/s/code/bluedit/web/src/pages/create-post.tsx"],"names":["React","Formik","Form","Layout","Button","InputField","useCreatePostMutation","useRouter","withUrqlClient","createUrqlClient","CreatePost","createPost","router","title","text","values","input","error","message","includes","push","isSubmitting"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,qBAAT,QAAsC,sBAAtC;AAEA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AAEA,OAAO,IAAMC,UAAwB,GAAG,SAA3BA,UAA2B,OAAQ;AAAA;;AAAA;;AAAA,8BACxBJ,qBAAqB,EADG;AAAA;AAAA,MACtCK,UADsC;;AAE9C,MAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,sBACE,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,OAAhB;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,aAAa,EAAE;AAAEM,QAAAA,KAAK,EAAC,EAAR;AAAYC,QAAAA,IAAI,EAAC;AAAjB,OADjB;AAEE,MAAA,QAAQ;AAAA,6EAAE,iBAAOC,MAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACcJ,UAAU,CAAC;AAACK,oBAAAA,KAAK,EAACD;AAAP,mBAAD,CADxB;;AAAA;AAAA;AACDE,kBAAAA,KADC,qBACDA,KADC;;AAER,sBAAGA,KAAH,aAAGA,KAAH,eAAGA,KAAK,CAAEC,OAAP,CAAeC,QAAf,CAAwB,mBAAxB,CAAH,EAAgD;AAC9CP,oBAAAA,MAAM,CAACQ,IAAP,CAAY,QAAZ;AACH,mBAFC,MAEK;AACHR,oBAAAA,MAAM,CAACQ,IAAP,CAAY,GAAZ;AACH;;AANS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;;AAAA;AAAA;AAAA;AAAA,SAFV;AAAA,gBAUG;AAAA,YAAGC,YAAH,SAAGA,YAAH;AAAA,4BACC,QAAC,IAAD;AAAA,kCACE,QAAC,UAAD;AACE,YAAA,QAAQ,EAAE,KADZ;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,WAAW,EAAC,OAHd;AAIE,YAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,mBADF,eAOE,QAAC,UAAD;AACE,YAAA,QAAQ,MADV;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,WAAW,EAAC,SAHd;AAIE,YAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,mBAPF,eAaE,QAAC,MAAD;AACE,YAAA,EAAE,EAAE,CADN;AAEE,YAAA,SAAS,EAAEA,YAFb;AAGE,YAAA,IAAI,EAAC,QAHP;AAIE,YAAA,WAAW,EAAC,MAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,iBADD;AAAA;AAVH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAuCD,CA1CM;;GAAMX,U;UACWJ,qB,EACPC,S;;;KAFJG,U;AA2Cb,eAAeF,cAAc,CAACC,gBAAD,CAAd,CAAiCC,UAAjC,CAAf","sourcesContent":["import React from \"react\";\nimport { Formik, Form } from \"formik\";\nimport { Layout } from \"../components/Layout\";\nimport { Button } from \"@chakra-ui/react\";\nimport { InputField } from \"../components/InputField\";\nimport { useCreatePostMutation } from \"../generated/graphql\";\nimport { toErrorMap } from \"../utils/toErrorMap\";\nimport { useRouter } from \"next/router\";\nimport { withUrqlClient } from \"next-urql\";\nimport { createUrqlClient } from \"../utils/createUrqlClient\";\n\nexport const CreatePost: React.FC<{}> = ({}) => {\n  const [,createPost] = useCreatePostMutation();\n  const router = useRouter();\n  return (\n    <Layout variant=\"small\">\n      <Formik\n        initialValues={{ title:'', text:''}}\n        onSubmit={async (values) => {\n          const {error} = await createPost({input:values})\n          if(error?.message.includes(\"Not authenticated\")){\n            router.push('/login');\n        } else {\n            router.push('/')\n        }}}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <InputField\n              textarea={false}\n              name=\"title\"\n              placeholder='title'\n              label=\"title\"\n            ></InputField>\n            <InputField \n              textarea\n              name=\"text\"\n              placeholder='text...'\n              label=\"text\"\n            ></InputField>\n            <Button\n              mt={4}\n              isLoading={isSubmitting}\n              type=\"submit\"\n              colorScheme=\"teal\"\n            >\n              Create post\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Layout>\n  );\n};\nexport default withUrqlClient(createUrqlClient)(CreatePost);\n"]},"metadata":{},"sourceType":"module"}