{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/s/code/bluedit/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"/home/s/code/bluedit/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _jsxFileName = \"/home/s/code/bluedit/web/src/components/Navbar.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Box, Flex, Link } from \"@chakra-ui/layout\";\nimport React from \"react\";\nimport NextLink from \"next/link\";\nimport { useLogoutMutation, useMeQuery } from \"../generated/graphql\";\nimport { Button } from \"@chakra-ui/button\";\nimport { isServer } from \"../utils/isServer\";\nexport var Navbar = function Navbar(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var _useMeQuery = useMeQuery({\n    pause: isServer() // Don't fetch the current user from server, but do it from the browser (to avoid multiple requests on the server)\n\n  }),\n      _useMeQuery2 = _slicedToArray(_useMeQuery, 1),\n      _useMeQuery2$ = _useMeQuery2[0],\n      data = _useMeQuery2$.data,\n      fetching = _useMeQuery2$.fetching;\n\n  var _useLogoutMutation = useLogoutMutation(),\n      _useLogoutMutation2 = _slicedToArray(_useLogoutMutation, 2),\n      logoutFetching = _useLogoutMutation2[0].fetching,\n      logout = _useLogoutMutation2[1];\n\n  var body = null; // data is loading\n\n  if (fetching) {//user is not logged in\n  } else if (!(data !== null && data !== void 0 && data.me)) {\n    body = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NextLink, {\n        href: \"/login\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          mr: 2,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(NextLink, {\n        href: \"/register\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, _this), \" \"]\n    }, void 0, true); // user is logged in\n  } else {\n    body = /*#__PURE__*/_jsxDEV(Flex, {\n      children: [/*#__PURE__*/_jsxDEV(NextLink, {\n        href: \"/create-post\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          mr: 2,\n          children: \"New post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Box, {\n        mr: 2,\n        children: data.me.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"black\",\n        variant: \"link\",\n        isLoading: logoutFetching,\n        onClick: function onClick() {\n          logout();\n        },\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    zIndex: 2,\n    position: \"sticky\",\n    top: 0,\n    bg: \"grey\",\n    p: 4,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      ml: \"auto\",\n      children: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Navbar, \"gFW3Bb1XevkRT0RtTSFhMPS0cNA=\", false, function () {\n  return [useMeQuery, useLogoutMutation];\n});\n\n_c = Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/home/s/code/bluedit/web/src/components/Navbar.tsx"],"names":["Box","Flex","Link","React","NextLink","useLogoutMutation","useMeQuery","Button","isServer","Navbar","pause","data","fetching","logoutFetching","logout","body","me","username"],"mappings":";;;;;;;;;AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,IAApB,QAAgC,mBAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,iBAAT,EAA4BC,UAA5B,QAA8C,sBAA9C;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AAIA,OAAO,IAAMC,MAA6B,GAAG,SAAhCA,MAAgC,OAAQ;AAAA;;AAAA;;AAAA,oBACtBH,UAAU,CAAC;AACtCI,IAAAA,KAAK,EAAEF,QAAQ,EADuB,CACnB;;AADmB,GAAD,CADY;AAAA;AAAA;AAAA,MAC1CG,IAD0C,iBAC1CA,IAD0C;AAAA,MACpCC,QADoC,iBACpCA,QADoC;;AAAA,2BAIJP,iBAAiB,EAJb;AAAA;AAAA,MAIhCQ,cAJgC,0BAI1CD,QAJ0C;AAAA,MAIdE,MAJc;;AAKnD,MAAIC,IAAI,GAAG,IAAX,CALmD,CAOnD;;AACA,MAAIH,QAAJ,EAAc,CACZ;AACD,GAFD,MAEO,IAAI,EAACD,IAAD,aAACA,IAAD,eAACA,IAAI,CAAEK,EAAP,CAAJ,EAAe;AACpBD,IAAAA,IAAI,gBACF;AAAA,8BACE,QAAC,QAAD;AAAU,QAAA,IAAI,EAAC,QAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAE,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eADF,eAIE,QAAC,QAAD;AAAU,QAAA,IAAI,EAAC,WAAf;AAAA,+BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eAJF,EAMc,GANd;AAAA,oBADF,CADoB,CAWpB;AACD,GAZM,MAYA;AACLA,IAAAA,IAAI,gBACF,QAAC,IAAD;AAAA,8BACE,QAAC,QAAD;AAAU,QAAA,IAAI,EAAC,cAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAE,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eADF,eAIE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,kBAAaJ,IAAI,CAACK,EAAL,CAAQC;AAArB;AAAA;AAAA;AAAA;AAAA,eAJF,eAKE,QAAC,MAAD;AACE,QAAA,KAAK,EAAC,OADR;AAEE,QAAA,OAAO,EAAC,MAFV;AAGE,QAAA,SAAS,EAAEJ,cAHb;AAIE,QAAA,OAAO,EAAE,mBAAM;AACbC,UAAAA,MAAM;AACP,SANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAkBD;;AAED,sBACE,QAAC,IAAD;AAAM,IAAA,MAAM,EAAE,CAAd;AAAiB,IAAA,QAAQ,EAAC,QAA1B;AAAmC,IAAA,GAAG,EAAE,CAAxC;AAA2C,IAAA,EAAE,EAAC,MAA9C;AAAqD,IAAA,CAAC,EAAE,CAAxD;AAAA,2BACE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,MAAT;AAAA,gBAAkBC;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CAhDM;;GAAMN,M;UACkBH,U,EAGkBD,iB;;;KAJpCI,M","sourcesContent":["import { Box, Flex, Link } from \"@chakra-ui/layout\";\nimport React from \"react\";\nimport NextLink from \"next/link\";\nimport { useLogoutMutation, useMeQuery } from \"../generated/graphql\";\nimport { Button } from \"@chakra-ui/button\";\nimport { isServer } from \"../utils/isServer\";\n\ninterface NavbarProps {}\n\nexport const Navbar: React.FC<NavbarProps> = ({}) => {\n  const [{ data, fetching }] = useMeQuery({\n    pause: isServer(), // Don't fetch the current user from server, but do it from the browser (to avoid multiple requests on the server)\n  });\n  const [{ fetching: logoutFetching }, logout] = useLogoutMutation();\n  let body = null;\n\n  // data is loading\n  if (fetching) {\n    //user is not logged in\n  } else if (!data?.me) {\n    body = (\n      <>\n        <NextLink href=\"/login\">\n          <Link mr={2}>Login</Link>\n        </NextLink>\n        <NextLink href=\"/register\">\n          <Link>Register</Link>\n        </NextLink>{\" \"}\n      </>\n    );\n    // user is logged in\n  } else {\n    body = (\n      <Flex>\n        <NextLink href=\"/create-post\">\n          <Link mr={2}>New post</Link>\n        </NextLink>\n        <Box mr={2}>{data.me.username}</Box>\n        <Button\n          color=\"black\"\n          variant=\"link\"\n          isLoading={logoutFetching}\n          onClick={() => {\n            logout();\n          }}\n        >\n          Logout\n        </Button>\n      </Flex>\n    );\n  }\n\n  return (\n    <Flex zIndex={2} position=\"sticky\" top={0} bg=\"grey\" p={4}>\n      <Box ml={\"auto\"}>{body}</Box>\n    </Flex>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}