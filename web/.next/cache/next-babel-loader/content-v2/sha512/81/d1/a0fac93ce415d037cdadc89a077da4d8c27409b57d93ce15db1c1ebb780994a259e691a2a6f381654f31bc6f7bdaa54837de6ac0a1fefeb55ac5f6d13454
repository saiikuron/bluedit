{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/home/s/code/bluedit/web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/s/code/bluedit/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/s/code/bluedit/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"/home/s/code/bluedit/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _jsxFileName = \"/home/s/code/bluedit/web/src/pages/forgot-password.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Button } from \"@chakra-ui/button\";\nimport { Box } from \"@chakra-ui/layout\";\nimport { Form, Formik } from \"formik\";\nimport { withUrqlClient } from \"next-urql\";\nimport React, { useState } from \"react\";\nimport { InputField } from \"../components/InputField\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport { useForgotPasswordMutation } from \"../generated/graphql\";\nimport { createUrqlClient } from \"../utils/createUrqlClient\";\n\nvar forgotPassword = function forgotPassword(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var _useState = useState(false),\n      complete = _useState[0],\n      setComplete = _useState[1];\n\n  var _useForgotPasswordMut = useForgotPasswordMutation(),\n      _useForgotPasswordMut2 = _slicedToArray(_useForgotPasswordMut, 2),\n      forgotPassword = _useForgotPasswordMut2[1];\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    variant: \"small\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: \"\"\n      },\n      onSubmit: /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref2) {\n          var setErrors;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  setErrors = _ref2.setErrors;\n                  _context.next = 3;\n                  return forgotPassword(values);\n\n                case 3:\n                  setComplete(true);\n\n                case 4:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x, _x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }(),\n      children: function children(_ref4) {\n        var isSubmitting = _ref4.isSubmitting;\n        return complete ? /*#__PURE__*/_jsxDEV(Box, {\n          children: \" We have sent you an email to reset your password!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, _this) : /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(InputField, {\n            name: \"email\",\n            label: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            mt: 4,\n            isLoading: isSubmitting,\n            type: \"submit\",\n            colorScheme: \"teal\",\n            children: \"forgot password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(forgotPassword, \"faFCxltjMWSYm4HFAk1hyKm2MmY=\", false, function () {\n  return [useForgotPasswordMutation];\n});\n\nexport default withUrqlClient(createUrqlClient)(forgotPassword);","map":{"version":3,"sources":["/home/s/code/bluedit/web/src/pages/forgot-password.tsx"],"names":["Button","Box","Form","Formik","withUrqlClient","React","useState","InputField","Wrapper","useForgotPasswordMutation","createUrqlClient","forgotPassword","complete","setComplete","email","values","setErrors","isSubmitting"],"mappings":";;;;;;;;;;AAAA,SAASA,MAAT,QAAuB,mBAAvB;AACA,SAASC,GAAT,QAAoB,mBAApB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,QAA7B;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,yBAAT,QAA0C,sBAA1C;AACA,SAASC,gBAAT,QAAiC,2BAAjC;;AAEA,IAAMC,cAA4B,GAAG,8BAAQ;AAAA;;AAAA;;AAAA,kBACXL,QAAQ,CAAC,KAAD,CADG;AAAA,MACpCM,QADoC;AAAA,MAC1BC,WAD0B;;AAAA,8BAEhBJ,yBAAyB,EAFT;AAAA;AAAA,MAElCE,cAFkC;;AAG3C,sBACE,QAAC,OAAD;AAAS,IAAA,OAAO,EAAC,OAAjB;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,aAAa,EAAE;AAAEG,QAAAA,KAAK,EAAE;AAAT,OADjB;AAEE,MAAA,QAAQ;AAAA,6EAAE,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiBC,kBAAAA,SAAjB,SAAiBA,SAAjB;AAAA;AAAA,yBACFL,cAAc,CAACI,MAAD,CADZ;;AAAA;AAERF,kBAAAA,WAAW,CAAC,IAAD,CAAX;;AAFQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;;AAAA;AAAA;AAAA;AAAA,SAFV;AAAA,gBAOG;AAAA,YAAGI,YAAH,SAAGA,YAAH;AAAA,eACCL,QAAQ,gBACN,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADM,gBAGN,QAAC,IAAD;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,IAAI,EAAC,OAAjB;AAAyB,YAAA,KAAK,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE,QAAC,MAAD;AACE,YAAA,EAAE,EAAE,CADN;AAEE,YAAA,SAAS,EAAEK,YAFb;AAGE,YAAA,IAAI,EAAC,QAHP;AAIE,YAAA,WAAW,EAAC,MAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJH;AAAA;AAPH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AA6BD,CAhCD;;GAAMN,c;UAEuBF,yB;;;AAgC7B,eAAeL,cAAc,CAACM,gBAAD,CAAd,CAAiCC,cAAjC,CAAf","sourcesContent":["import { Button } from \"@chakra-ui/button\";\nimport { Box } from \"@chakra-ui/layout\";\nimport { Form, Formik } from \"formik\";\nimport { withUrqlClient } from \"next-urql\";\nimport React, { useState } from \"react\";\nimport { InputField } from \"../components/InputField\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport { useForgotPasswordMutation } from \"../generated/graphql\";\nimport { createUrqlClient } from \"../utils/createUrqlClient\";\n\nconst forgotPassword: React.FC<{}> = ({}) => {\n  const [complete, setComplete] = useState(false);\n  const [, forgotPassword] = useForgotPasswordMutation();\n  return (\n    <Wrapper variant=\"small\">\n      <Formik\n        initialValues={{ email: \"\" }}\n        onSubmit={async (values, { setErrors }) => {\n          await forgotPassword(values);\n          setComplete(true);\n        }}\n      >\n        {({ isSubmitting }) =>\n          complete ? (\n            <Box> We have sent you an email to reset your password!</Box>\n          ) : (\n            <Form>\n              <InputField name=\"email\" label=\"email\"></InputField>\n              <Button\n                mt={4}\n                isLoading={isSubmitting}\n                type=\"submit\"\n                colorScheme=\"teal\"\n              >\n                forgot password\n              </Button>\n            </Form>\n          )\n        }\n      </Formik>\n    </Wrapper>\n  );\n};\n\nexport default withUrqlClient(createUrqlClient)(forgotPassword);\n"]},"metadata":{},"sourceType":"module"}