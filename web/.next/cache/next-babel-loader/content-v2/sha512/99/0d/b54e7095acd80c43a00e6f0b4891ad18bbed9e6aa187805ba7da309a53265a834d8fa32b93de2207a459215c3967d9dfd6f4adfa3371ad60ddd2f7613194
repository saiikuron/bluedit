{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/home/s/tuto/web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/s/tuto/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectDestructuringEmpty from \"/home/s/tuto/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _jsxFileName = \"/home/s/tuto/web/src/pages/forgot-password.tsx\",\n    _this = this;\n\nimport { Button } from \"@chakra-ui/button\";\nimport { Form, Formik } from \"formik\";\nimport { withUrqlClient } from \"next-urql\";\nimport React from \"react\";\nimport { InputField } from \"../components/InputField\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport { createUrqlClient } from \"../utils/createUrqlClient\";\n\nvar forgotPassword = function forgotPassword(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    variant: \"small\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        usernameOrEmail: \"\",\n        password: \"\"\n      },\n      onSubmit: /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref2) {\n          var _response$data, _response$data2;\n\n          var setErrors, response;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  setErrors = _ref2.setErrors;\n                  _context.next = 3;\n                  return login(values);\n\n                case 3:\n                  response = _context.sent;\n\n                  if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.login.errors) {\n                    setErrors(toErrorMap(response.data.login.errors));\n                  } else if ((_response$data2 = response.data) !== null && _response$data2 !== void 0 && _response$data2.login.user) {\n                    // user successfully logged in\n                    router.push(\"/\");\n                  }\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x, _x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }(),\n      children: function children(_ref4) {\n        var isSubmitting = _ref4.isSubmitting;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(InputField, {\n            name: \"email\",\n            label: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            mt: 4,\n            isLoading: isSubmitting,\n            type: \"submit\",\n            colorScheme: \"teal\",\n            children: \"forgot password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, _this);\n};\n\nexport default withUrqlClient(createUrqlClient)(forgotPassword);","map":{"version":3,"sources":["/home/s/tuto/web/src/pages/forgot-password.tsx"],"names":["Button","Form","Formik","withUrqlClient","React","InputField","Wrapper","createUrqlClient","forgotPassword","usernameOrEmail","password","values","setErrors","login","response","data","errors","toErrorMap","user","router","push","isSubmitting"],"mappings":";;;;;;;;AAAA,SAASA,MAAT,QAAuB,mBAAvB;AAEA,SAASC,IAAT,EAAeC,MAAf,QAA6B,QAA7B;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,gBAAT,QAAiC,2BAAjC;;AAGA,IAAMC,cAA4B,GAAG,SAA/BA,cAA+B,OAAQ;AAAA;;AAC3C,sBACE,QAAC,OAAD;AAAS,IAAA,OAAO,EAAC,OAAjB;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,aAAa,EAAE;AAAEC,QAAAA,eAAe,EAAE,EAAnB;AAAuBC,QAAAA,QAAQ,EAAE;AAAjC,OADjB;AAEE,MAAA,QAAQ;AAAA,6EAAE,iBAAOC,MAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiBC,kBAAAA,SAAjB,SAAiBA,SAAjB;AAAA;AAAA,yBACeC,KAAK,CAACF,MAAD,CADpB;;AAAA;AACFG,kBAAAA,QADE;;AAER,wCAAIA,QAAQ,CAACC,IAAb,2CAAI,eAAeF,KAAf,CAAqBG,MAAzB,EAAiC;AAC/BJ,oBAAAA,SAAS,CAACK,UAAU,CAACH,QAAQ,CAACC,IAAT,CAAcF,KAAd,CAAoBG,MAArB,CAAX,CAAT;AACD,mBAFD,MAEO,uBAAIF,QAAQ,CAACC,IAAb,4CAAI,gBAAeF,KAAf,CAAqBK,IAAzB,EAA+B;AACpC;AACAC,oBAAAA,MAAM,CAACC,IAAP,CAAY,GAAZ;AACD;;AAPO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;;AAAA;AAAA;AAAA;AAAA,SAFV;AAAA,gBAYG;AAAA,YAAGC,YAAH,SAAGA,YAAH;AAAA,4BACC,QAAC,IAAD;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,IAAI,EAAC,OAAjB;AAAyB,YAAA,KAAK,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE,QAAC,MAAD;AACE,YAAA,EAAE,EAAE,CADN;AAEE,YAAA,SAAS,EAAEA,YAFb;AAGE,YAAA,IAAI,EAAC,QAHP;AAIE,YAAA,WAAW,EAAC,MAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,iBADD;AAAA;AAZH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AA8BD,CA/BD;;AAiCA,eAAelB,cAAc,CAACI,gBAAD,CAAd,CAAiCC,cAAjC,CAAf","sourcesContent":["import { Button } from \"@chakra-ui/button\";\nimport { Box, Flex, Link } from \"@chakra-ui/layout\";\nimport { Form, Formik } from \"formik\";\nimport { withUrqlClient } from \"next-urql\";\nimport React from \"react\";\nimport { InputField } from \"../components/InputField\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport { createUrqlClient } from \"../utils/createUrqlClient\";\nimport NextLink from \"next/link\";\n\nconst forgotPassword: React.FC<{}> = ({}) => {\n  return (\n    <Wrapper variant=\"small\">\n      <Formik\n        initialValues={{ usernameOrEmail: \"\", password: \"\" }}\n        onSubmit={async (values, { setErrors }) => {\n          const response = await login(values);\n          if (response.data?.login.errors) {\n            setErrors(toErrorMap(response.data.login.errors));\n          } else if (response.data?.login.user) {\n            // user successfully logged in\n            router.push(\"/\");\n          }\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <InputField name=\"email\" label=\"email\"></InputField>\n            <Button\n              mt={4}\n              isLoading={isSubmitting}\n              type=\"submit\"\n              colorScheme=\"teal\"\n            >\n              forgot password\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Wrapper>\n  );\n};\n\nexport default withUrqlClient(createUrqlClient)(forgotPassword);\n"]},"metadata":{},"sourceType":"module"}