{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/s/tuto/web/src/pages/login.tsx\";\nimport React from \"react\";\nimport { Formik, Form } from \"formik\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport { Box, Button, Link } from \"@chakra-ui/react\";\nimport { InputField } from \"../components/InputField\";\nimport { useLoginMutation } from \"../generated/graphql\";\nimport { toErrorMap } from \"../utils/toErrorMap\";\nimport { useRouter } from \"next/router\";\nimport { withUrqlClient } from \"next-urql\";\nimport { createUrqlClient } from \"../utils/createUrqlClient\";\nimport NextLink from \"next/link\";\nexport const Login = ({}) => {\n  const router = useRouter();\n  const [, login] = useLoginMutation();\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    variant: \"small\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        usernameOrEmail: \"\",\n        password: \"\"\n      },\n      onSubmit: async (values, {\n        setErrors\n      }) => {\n        var _response$data, _response$data2;\n\n        const response = await login(values);\n\n        if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.login.errors) {\n          setErrors(toErrorMap(response.data.login.errors));\n        } else if ((_response$data2 = response.data) !== null && _response$data2 !== void 0 && _response$data2.login.user) {\n          // user successfully logged in\n          router.push(\"/\");\n        }\n      },\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(InputField, {\n          name: \"usernameOrEmail\",\n          label: \"username or email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 4,\n          children: /*#__PURE__*/_jsxDEV(InputField, {\n            name: \"password\",\n            label: \"Password\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          mt: 4,\n          isLoading: isSubmitting,\n          type: \"submit\",\n          colorScheme: \"teal\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(NextLink, {\n          href: \"/forgot-password\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            children: \"Forgot password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\nexport default withUrqlClient(createUrqlClient)(Login);","map":{"version":3,"sources":["/home/s/tuto/web/src/pages/login.tsx"],"names":["React","Formik","Form","Wrapper","Box","Button","Link","InputField","useLoginMutation","toErrorMap","useRouter","withUrqlClient","createUrqlClient","NextLink","Login","router","login","usernameOrEmail","password","values","setErrors","response","data","errors","user","push","isSubmitting"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,IAAtB,QAAkC,kBAAlC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AAIA,OAAO,MAAMC,KAA8B,GAAG,CAAC,EAAD,KAAQ;AACpD,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAM,GAAGM,KAAH,IAAYR,gBAAgB,EAAlC;AACA,sBACE,QAAC,OAAD;AAAS,IAAA,OAAO,EAAC,OAAjB;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,aAAa,EAAE;AAAES,QAAAA,eAAe,EAAE,EAAnB;AAAuBC,QAAAA,QAAQ,EAAE;AAAjC,OADjB;AAEE,MAAA,QAAQ,EAAE,OAAOC,MAAP,EAAe;AAAEC,QAAAA;AAAF,OAAf,KAAiC;AAAA;;AACzC,cAAMC,QAAQ,GAAG,MAAML,KAAK,CAACG,MAAD,CAA5B;;AACA,8BAAIE,QAAQ,CAACC,IAAb,2CAAI,eAAeN,KAAf,CAAqBO,MAAzB,EAAiC;AAC/BH,UAAAA,SAAS,CAACX,UAAU,CAACY,QAAQ,CAACC,IAAT,CAAcN,KAAd,CAAoBO,MAArB,CAAX,CAAT;AACD,SAFD,MAEO,uBAAIF,QAAQ,CAACC,IAAb,4CAAI,gBAAeN,KAAf,CAAqBQ,IAAzB,EAA+B;AACpC;AACAT,UAAAA,MAAM,CAACU,IAAP,CAAY,GAAZ;AACD;AACF,OAVH;AAAA,gBAYG,CAAC;AAAEC,QAAAA;AAAF,OAAD,kBACC,QAAC,IAAD;AAAA,gCACE,QAAC,UAAD;AACE,UAAA,IAAI,EAAC,iBADP;AAEE,UAAA,KAAK,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAA,iCACE,QAAC,UAAD;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,KAAK,EAAC,UAFR;AAGE,YAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBALF,eAYE,QAAC,MAAD;AACE,UAAA,EAAE,EAAE,CADN;AAEE,UAAA,SAAS,EAAEA,YAFb;AAGE,UAAA,IAAI,EAAC,QAHP;AAIE,UAAA,WAAW,EAAC,MAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF,eAoBE,QAAC,QAAD;AAAU,UAAA,IAAI,EAAC,kBAAf;AAAA,iCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAbJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD,CA9CM;AA+CP,eAAef,cAAc,CAACC,gBAAD,CAAd,CAAiCE,KAAjC,CAAf","sourcesContent":["import React from \"react\";\nimport { Formik, Form } from \"formik\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport { Box, Button, Link } from \"@chakra-ui/react\";\nimport { InputField } from \"../components/InputField\";\nimport { useLoginMutation } from \"../generated/graphql\";\nimport { toErrorMap } from \"../utils/toErrorMap\";\nimport { useRouter } from \"next/router\";\nimport { withUrqlClient } from \"next-urql\";\nimport { createUrqlClient } from \"../utils/createUrqlClient\";\nimport NextLink from \"next/link\";\n\ninterface registerProps {}\n\nexport const Login: React.FC<registerProps> = ({}) => {\n  const router = useRouter();\n  const [, login] = useLoginMutation();\n  return (\n    <Wrapper variant=\"small\">\n      <Formik\n        initialValues={{ usernameOrEmail: \"\", password: \"\" }}\n        onSubmit={async (values, { setErrors }) => {\n          const response = await login(values);\n          if (response.data?.login.errors) {\n            setErrors(toErrorMap(response.data.login.errors));\n          } else if (response.data?.login.user) {\n            // user successfully logged in\n            router.push(\"/\");\n          }\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <InputField\n              name=\"usernameOrEmail\"\n              label=\"username or email\"\n            ></InputField>\n            <Box mt={4}>\n              <InputField\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n              ></InputField>\n            </Box>\n            <Button\n              mt={4}\n              isLoading={isSubmitting}\n              type=\"submit\"\n              colorScheme=\"teal\"\n            >\n              Login\n            </Button>\n            <NextLink href=\"/forgot-password\">\n              <Link>Forgot password?</Link>\n            </NextLink>\n          </Form>\n        )}\n      </Formik>\n    </Wrapper>\n  );\n};\nexport default withUrqlClient(createUrqlClient)(Login);\n"]},"metadata":{},"sourceType":"module"}