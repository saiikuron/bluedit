{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/home/s/tuto/web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/s/tuto/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/s/tuto/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"/home/s/tuto/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _jsxFileName = \"/home/s/tuto/web/src/pages/register.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Formik, Form } from \"formik\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport { Box, Button } from \"@chakra-ui/react\";\nimport { InputField } from \"../components/InputField\";\nimport { useRegisterMutation } from \"../generated/graphql\";\nimport { toErrorMap } from \"../utils/toErrorMap\";\nimport { useRouter } from \"next/router\";\nexport var Register = function Register(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var router = useRouter();\n\n  var _useRegisterMutation = useRegisterMutation(),\n      _useRegisterMutation2 = _slicedToArray(_useRegisterMutation, 2),\n      register = _useRegisterMutation2[1];\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    variant: \"small\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        username: \"\",\n        password: \"\"\n      },\n      onSubmit: /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref2) {\n          var _response$data, _response$data2;\n\n          var setStatus, response;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  setStatus = _ref2.setStatus;\n                  _context.next = 3;\n                  return register(values);\n\n                case 3:\n                  response = _context.sent;\n\n                  if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.register.errors) {\n                    console.log(\"register error: \", response.data.register.errors);\n                    setStatus(toErrorMap(response.data.register.errors)); // to be fixed\n                  } else if ((_response$data2 = response.data) !== null && _response$data2 !== void 0 && _response$data2.register.user) {\n                    // user successfully registered\n                    router.push(\"/\");\n                  }\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x, _x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }(),\n      children: function children(_ref4) {\n        var isSubmitting = _ref4.isSubmitting;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(InputField, {\n            name: \"username\",\n            label: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Box, {\n            mt: 4,\n            children: /*#__PURE__*/_jsxDEV(InputField, {\n              name: \"password\",\n              label: \"Password\",\n              type: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            mt: 4,\n            isLoading: isSubmitting,\n            type: \"submit\",\n            colorScheme: \"teal\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Register, \"1d3EIgmU4Efp8mYKr9OS4WrCiXQ=\", false, function () {\n  return [useRouter, useRegisterMutation];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/s/tuto/web/src/pages/register.tsx"],"names":["React","Formik","Form","Wrapper","Box","Button","InputField","useRegisterMutation","toErrorMap","useRouter","Register","router","register","username","password","values","setStatus","response","data","errors","console","log","user","push","isSubmitting"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,GAAT,EAAcC,MAAd,QAA4B,kBAA5B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,mBAAT,QAAoC,sBAApC;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,SAAT,QAA0B,aAA1B;AAIA,OAAO,IAAMC,QAAiC,GAAG,SAApCA,QAAoC,OAAQ;AAAA;;AAAA;;AACvD,MAAMC,MAAM,GAAGF,SAAS,EAAxB;;AADuD,6BAElCF,mBAAmB,EAFe;AAAA;AAAA,MAE9CK,QAF8C;;AAGvD,sBACE,QAAC,OAAD;AAAS,IAAA,OAAO,EAAC,OAAjB;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,aAAa,EAAE;AAAEC,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,QAAQ,EAAE;AAA1B,OADjB;AAEE,MAAA,QAAQ;AAAA,6EAAE,iBAAOC,MAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiBC,kBAAAA,SAAjB,SAAiBA,SAAjB;AAAA;AAAA,yBACeJ,QAAQ,CAACG,MAAD,CADvB;;AAAA;AACFE,kBAAAA,QADE;;AAER,wCAAIA,QAAQ,CAACC,IAAb,2CAAI,eAAeN,QAAf,CAAwBO,MAA5B,EAAoC;AAClCC,oBAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCJ,QAAQ,CAACC,IAAT,CAAcN,QAAd,CAAuBO,MAAvD;AACAH,oBAAAA,SAAS,CAACR,UAAU,CAACS,QAAQ,CAACC,IAAT,CAAcN,QAAd,CAAuBO,MAAxB,CAAX,CAAT,CAFkC,CAEoB;AACvD,mBAHD,MAGO,uBAAIF,QAAQ,CAACC,IAAb,4CAAI,gBAAeN,QAAf,CAAwBU,IAA5B,EAAkC;AACvC;AACAX,oBAAAA,MAAM,CAACY,IAAP,CAAY,GAAZ;AACD;;AARO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;;AAAA;AAAA;AAAA;AAAA,SAFV;AAAA,gBAaG;AAAA,YAAGC,YAAH,SAAGA,YAAH;AAAA,4BACC,QAAC,IAAD;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,IAAI,EAAC,UAAjB;AAA4B,YAAA,KAAK,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,CAAT;AAAA,mCACE,QAAC,UAAD;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,KAAK,EAAC,UAFR;AAGE,cAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,mBAFF,eASE,QAAC,MAAD;AACE,YAAA,EAAE,EAAE,CADN;AAEE,YAAA,SAAS,EAAEA,YAFb;AAGE,YAAA,IAAI,EAAC,QAHP;AAIE,YAAA,WAAW,EAAC,MAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBATF;AAAA;AAAA;AAAA;AAAA;AAAA,iBADD;AAAA;AAbH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAsCD,CAzCM;;GAAMd,Q;UACID,S,EACMF,mB;;;KAFVG,Q;AA0Cb,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport { Formik, Form } from \"formik\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport { Box, Button } from \"@chakra-ui/react\";\nimport { InputField } from \"../components/InputField\";\nimport { useRegisterMutation } from \"../generated/graphql\";\nimport { toErrorMap } from \"../utils/toErrorMap\";\nimport { useRouter } from \"next/router\";\n\ninterface registerProps {}\n\nexport const Register: React.FC<registerProps> = ({}) => {\n  const router = useRouter();\n  const [, register] = useRegisterMutation();\n  return (\n    <Wrapper variant=\"small\">\n      <Formik\n        initialValues={{ username: \"\", password: \"\" }}\n        onSubmit={async (values, { setStatus }) => {\n          const response = await register(values);\n          if (response.data?.register.errors) {\n            console.log(\"register error: \", response.data.register.errors);\n            setStatus(toErrorMap(response.data.register.errors)); // to be fixed\n          } else if (response.data?.register.user) {\n            // user successfully registered\n            router.push(\"/\");\n          }\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <InputField name=\"username\" label=\"Username\"></InputField>\n            <Box mt={4}>\n              <InputField\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n              ></InputField>\n            </Box>\n            <Button\n              mt={4}\n              isLoading={isSubmitting}\n              type=\"submit\"\n              colorScheme=\"teal\"\n            >\n              Register\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Wrapper>\n  );\n};\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}