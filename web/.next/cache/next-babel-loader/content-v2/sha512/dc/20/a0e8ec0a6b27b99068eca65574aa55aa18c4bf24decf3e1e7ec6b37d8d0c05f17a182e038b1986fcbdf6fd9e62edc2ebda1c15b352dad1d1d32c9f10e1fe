{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/home/s/tuto/web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/s/tuto/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/s/tuto/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/s/tuto/web/src/pages/change-password/[token].tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Alert, AlertIcon } from \"@chakra-ui/alert\";\nimport { Button } from \"@chakra-ui/button\";\nimport { Form, Formik } from \"formik\";\nimport { useRouter } from \"next/router\";\nimport { useState } from \"react\";\nimport { InputField } from \"../../components/InputField\";\nimport { Wrapper } from \"../../components/Wrapper\";\nimport { useChangePasswordMutation } from \"../../generated/graphql\";\nimport { toErrorMap } from \"../../utils/toErrorMap\";\n\nvar ChangePassword = function ChangePassword(_ref) {\n  _s();\n\n  var token = _ref.token;\n  var router = useRouter();\n\n  var _useChangePasswordMut = useChangePasswordMutation(),\n      _useChangePasswordMut2 = _slicedToArray(_useChangePasswordMut, 2),\n      changePassword = _useChangePasswordMut2[1];\n\n  var _useState = useState(\"\"),\n      tokenError = _useState[0],\n      setTokenError = _useState[1];\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    variant: \"small\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        newPassword: \"\"\n      },\n      onSubmit: /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref2) {\n          var _response$data, _response$data2;\n\n          var setErrors, response, errorMap;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  setErrors = _ref2.setErrors;\n                  _context.next = 3;\n                  return changePassword({\n                    newPassword: values.newPassword,\n                    token: token\n                  });\n\n                case 3:\n                  response = _context.sent;\n\n                  if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.changePassword.errors) {\n                    errorMap = toErrorMap(response.data.changePassword.errors);\n\n                    if (\"token\" in errorMap) {\n                      setTokenError(errorMap.token);\n                    }\n\n                    setErrors(errorMap);\n                  } else if ((_response$data2 = response.data) !== null && _response$data2 !== void 0 && _response$data2.changePassword.user) {\n                    // worked\n                    router.push(\"/\");\n                  }\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x, _x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }(),\n      children: function children(_ref4) {\n        var isSubmitting = _ref4.isSubmitting;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [tokenError ? /*#__PURE__*/_jsxDEV(Alert, {\n            status: \"error\",\n            children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, _this), tokenError]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, _this) : null, /*#__PURE__*/_jsxDEV(InputField, {\n            name: \"newPassword\",\n            label: \"New password\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            mt: 4,\n            isLoading: isSubmitting,\n            type: \"submit\",\n            colorScheme: \"teal\",\n            children: \"Change password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ChangePassword, \"uUGG1qrP2/K7ETkw6qD8KF59IW8=\", false, function () {\n  return [useRouter, useChangePasswordMutation];\n});\n\n_c = ChangePassword;\n\nChangePassword.getInitialProps = function (_ref5) {\n  var query = _ref5.query;\n  return {\n    token: query.token\n  };\n};\n\nexport default ChangePassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"sources":["/home/s/tuto/web/src/pages/change-password/[token].tsx"],"names":["Alert","AlertIcon","Button","Form","Formik","useRouter","useState","InputField","Wrapper","useChangePasswordMutation","toErrorMap","ChangePassword","token","router","changePassword","tokenError","setTokenError","newPassword","values","setErrors","response","data","errors","errorMap","user","push","isSubmitting","getInitialProps","query"],"mappings":"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","sourcesContent":["import { Alert, AlertIcon } from \"@chakra-ui/alert\";\nimport { Button } from \"@chakra-ui/button\";\nimport { Form, Formik } from \"formik\";\nimport { NextPage } from \"next\";\nimport { useRouter } from \"next/router\";\nimport { useState } from \"react\";\nimport { InputField } from \"../../components/InputField\";\nimport { Wrapper } from \"../../components/Wrapper\";\nimport { useChangePasswordMutation } from \"../../generated/graphql\";\nimport { toErrorMap } from \"../../utils/toErrorMap\";\n\nconst ChangePassword: NextPage<{ token: string }> = ({ token }) => {\n  const router = useRouter();\n  const [, changePassword] = useChangePasswordMutation();\n  const [tokenError, setTokenError] = useState(\"\");\n  return (\n    <Wrapper variant=\"small\">\n      <Formik\n        initialValues={{ newPassword: \"\" }}\n        onSubmit={async (values, { setErrors }) => {\n          const response = await changePassword({\n            newPassword: values.newPassword,\n            token,\n          });\n          if (response.data?.changePassword.errors) {\n            const errorMap = toErrorMap(response.data.changePassword.errors);\n            if (\"token\" in errorMap) {\n              setTokenError(errorMap.token);\n            }\n            setErrors(errorMap);\n          } else if (response.data?.changePassword.user) {\n            // worked\n            router.push(\"/\");\n          }\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            {tokenError ? (\n              <Alert status=\"error\">\n                <AlertIcon />\n                {tokenError}\n              </Alert>\n            ) : null}\n            <InputField\n              name=\"newPassword\"\n              label=\"New password\"\n              type=\"password\"\n            ></InputField>\n            <Button\n              mt={4}\n              isLoading={isSubmitting}\n              type=\"submit\"\n              colorScheme=\"teal\"\n            >\n              Change password\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Wrapper>\n  );\n};\nChangePassword.getInitialProps = ({ query }) => {\n  return {\n    token: query.token as string,\n  };\n};\nexport default ChangePassword;\n"]},"metadata":{},"sourceType":"module"}