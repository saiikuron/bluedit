{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/home/s/tuto/web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/s/tuto/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/s/tuto/web/src/pages/change-password/[token].tsx\",\n    _this = this;\n\nimport { Button } from \"@chakra-ui/button\";\nimport { Form, Formik } from \"formik\";\nimport { InputField } from \"../../components/InputField\";\nimport { Wrapper } from \"../../components/Wrapper\";\n\nvar ChangePassword = function ChangePassword(_ref) {\n  var token = _ref.token;\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    variant: \"small\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        newPassword: \"\"\n      },\n      onSubmit: /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref2) {\n          var setErrors;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  setErrors = _ref2.setErrors;\n\n                case 1:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x, _x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }(),\n      children: function children(_ref4) {\n        var isSubmitting = _ref4.isSubmitting;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(InputField, {\n            name: \"newPassword\",\n            label: \"New password\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            mt: 4,\n            isLoading: isSubmitting,\n            type: \"submit\",\n            colorScheme: \"teal\",\n            children: \"Change password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = ChangePassword;\n\nChangePassword.getInitialProps = function (_ref5) {\n  var query = _ref5.query;\n  return {\n    token: query.token\n  };\n};\n\nexport default ChangePassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"sources":["/home/s/tuto/web/src/pages/change-password/[token].tsx"],"names":["Button","Form","Formik","InputField","Wrapper","ChangePassword","token","newPassword","values","setErrors","isSubmitting","getInitialProps","query"],"mappings":";;;;;;;AAAA,SAASA,MAAT,QAAuB,mBAAvB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,QAA7B;AAEA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,OAAT,QAAwB,0BAAxB;;AAEA,IAAMC,cAA2C,GAAG,SAA9CA,cAA8C,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;AACjE,sBACE,QAAC,OAAD;AAAS,IAAA,OAAO,EAAC,OAAjB;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,aAAa,EAAE;AAAEC,QAAAA,WAAW,EAAE;AAAf,OADjB;AAEE,MAAA,QAAQ;AAAA,6EAAE,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiBC,kBAAAA,SAAjB,SAAiBA,SAAjB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;;AAAA;AAAA;AAAA;AAAA,SAFV;AAAA,gBAaG;AAAA,YAAGC,YAAH,SAAGA,YAAH;AAAA,4BACC,QAAC,IAAD;AAAA,kCACE,QAAC,UAAD;AACE,YAAA,IAAI,EAAC,aADP;AAEE,YAAA,KAAK,EAAC,cAFR;AAGE,YAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,mBADF,eAME,QAAC,MAAD;AACE,YAAA,EAAE,EAAE,CADN;AAEE,YAAA,SAAS,EAAEA,YAFb;AAGE,YAAA,IAAI,EAAC,QAHP;AAIE,YAAA,WAAW,EAAC,MAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANF;AAAA;AAAA;AAAA;AAAA;AAAA,iBADD;AAAA;AAbH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAmCD,CApCD;;KAAML,c;;AAqCNA,cAAc,CAACM,eAAf,GAAiC,iBAAe;AAAA,MAAZC,KAAY,SAAZA,KAAY;AAC9C,SAAO;AACLN,IAAAA,KAAK,EAAEM,KAAK,CAACN;AADR,GAAP;AAGD,CAJD;;AAKA,eAAeD,cAAf","sourcesContent":["import { Button } from \"@chakra-ui/button\";\nimport { Form, Formik } from \"formik\";\nimport { NextPage } from \"next\";\nimport { InputField } from \"../../components/InputField\";\nimport { Wrapper } from \"../../components/Wrapper\";\n\nconst ChangePassword: NextPage<{ token: string }> = ({ token }) => {\n  return (\n    <Wrapper variant=\"small\">\n      <Formik\n        initialValues={{ newPassword: \"\" }}\n        onSubmit={async (values, { setErrors }) => {\n          /* const response = await login(values);\n          if (response.data?.login.errors) {\n            console.log(\"register error: \", response.data.login.errors);\n            setErrors(toErrorMap(response.data.login.errors));\n          } else if (response.data?.login.user) {\n            // user successfully logged in\n            router.push(\"/\");\n          } */\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <InputField\n              name=\"newPassword\"\n              label=\"New password\"\n              type=\"password\"\n            ></InputField>\n            <Button\n              mt={4}\n              isLoading={isSubmitting}\n              type=\"submit\"\n              colorScheme=\"teal\"\n            >\n              Change password\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Wrapper>\n  );\n};\nChangePassword.getInitialProps = ({ query }) => {\n  return {\n    token: query.token as string,\n  };\n};\nexport default ChangePassword;\n"]},"metadata":{},"sourceType":"module"}