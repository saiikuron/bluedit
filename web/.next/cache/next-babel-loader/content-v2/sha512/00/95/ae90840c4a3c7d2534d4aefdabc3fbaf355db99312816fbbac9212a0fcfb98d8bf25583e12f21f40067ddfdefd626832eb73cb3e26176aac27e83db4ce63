{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/s/code/bluedit/web/src/pages/index.tsx\";\nimport { withUrqlClient } from \"next-urql\";\nimport { createUrqlClient } from \"../utils/createUrqlClient\";\nimport { usePostsQuery } from \"../generated/graphql\";\nimport { Stack, Box, Heading, Text, Flex, Button } from \"@chakra-ui/react\";\nimport { Layout } from '../components/Layout';\nimport { useState } from \"react\";\n\nconst Index = () => {\n  const {\n    0: variables,\n    1: setVariables\n  } = useState({\n    limit: 10,\n    cursor: null\n  });\n  const [{\n    data,\n    fetching\n  }] = usePostsQuery({\n    variables\n  });\n\n  if (!fetching && !data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No posts found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, this), !data && fetching ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 8,\n        children: data.posts.map(p => /*#__PURE__*/_jsxDEV(Box, {\n          p: 5,\n          shadow: \"md\",\n          borderWidth: \"1px\",\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            fontSize: \"xl\",\n            children: p.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            mt: 4,\n            children: p.textSnippet\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 11\n          }, this)]\n        }, p.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), data ? /*#__PURE__*/_jsxDEV(Flex, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            setVariables({\n              limit: variables.limit,\n              cursor: data.posts[data.posts.length - 1].createdAt\n            });\n          },\n          isLoading: fetching,\n          m: \"auto\",\n          my: 6,\n          children: \"Load more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this) : null, \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\nexport default withUrqlClient(createUrqlClient, {\n  ssr: true\n})(Index);","map":{"version":3,"sources":["/home/s/code/bluedit/web/src/pages/index.tsx"],"names":["withUrqlClient","createUrqlClient","usePostsQuery","Stack","Box","Heading","Text","Flex","Button","Layout","useState","Index","variables","setVariables","limit","cursor","data","fetching","posts","map","p","title","textSnippet","id","length","createdAt","ssr"],"mappings":";;;AAAA,SAASA,cAAT,QAA+B,WAA/B;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,OAArB,EAA8BC,IAA9B,EAAoCC,IAApC,EAA0CC,MAA1C,QAAwD,kBAAxD;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BH,QAAQ,CAAC;AAAEI,IAAAA,KAAK,EAAC,EAAR;AAAYC,IAAAA,MAAM,EAAE;AAApB,GAAD,CAA1C;AACA,QAAM,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,IAAuBf,aAAa,CAAC;AAAEU,IAAAA;AAAF,GAAD,CAA1C;;AAEA,MAAG,CAACK,QAAD,IAAa,CAACD,IAAjB,EAAsB;AACpB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE;AAAA,2BACA,QAAC,MAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA,cADF,EAEG,CAACA,IAAD,IAASC,QAAT,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC,QAAC,KAAD;AAAO,QAAA,OAAO,EAAE,CAAhB;AAAA,kBACGD,IAAI,CAAEE,KAAN,CAAYC,GAAZ,CAAiBC,CAAD,iBACjB,QAAC,GAAD;AAAgB,UAAA,CAAC,EAAE,CAAnB;AAAsB,UAAA,MAAM,EAAC,IAA7B;AAAkC,UAAA,WAAW,EAAC,KAA9C;AAAA,kCACA,QAAC,OAAD;AAAS,YAAA,QAAQ,EAAC,IAAlB;AAAA,sBAAwBA,CAAC,CAACC;AAA1B;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA,QAAC,IAAD;AAAM,YAAA,EAAE,EAAE,CAAV;AAAA,sBAAcD,CAAC,CAACE;AAAhB;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA,WAAUF,CAAC,CAACG,EAAZ;AAAA;AAAA;AAAA;AAAA,gBADC;AADH;AAAA;AAAA;AAAA;AAAA,cALJ,EAcGP,IAAI,gBACH,QAAC,IAAD;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAI;AACnBH,YAAAA,YAAY,CAAC;AACXC,cAAAA,KAAK,EAAEF,SAAS,CAACE,KADN;AAEXC,cAAAA,MAAM,EAAEC,IAAI,CAACE,KAAL,CAAWF,IAAI,CAACE,KAAL,CAAWM,MAAX,GAAoB,CAA/B,EAAkCC;AAF/B,aAAD,CAAZ;AAID,WALD;AAKG,UAAA,SAAS,EAAER,QALd;AAKwB,UAAA,CAAC,EAAC,MAL1B;AAKiC,UAAA,EAAE,EAAE,CALrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADG,GASD,IAvBN;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AA8BD,CArCD;;AAuCA,eAAejB,cAAc,CAACC,gBAAD,EAAmB;AAAEyB,EAAAA,GAAG,EAAE;AAAP,CAAnB,CAAd,CAAgDf,KAAhD,CAAf","sourcesContent":["import { withUrqlClient } from \"next-urql\";\nimport { createUrqlClient } from \"../utils/createUrqlClient\";\nimport { usePostsQuery } from \"../generated/graphql\";\nimport { Stack, Box, Heading, Text, Flex, Button } from \"@chakra-ui/react\";\nimport { Layout } from '../components/Layout';\nimport { useState } from \"react\";\n\nconst Index = () => {\n  const [variables, setVariables] = useState({ limit:10, cursor: null as null | string});\n  const [{ data, fetching }] = usePostsQuery({ variables });\n\n  if(!fetching && !data){\n    return <div>No posts found.</div>\n  }\n  return (\n    <>\n    <Layout>\n      <br />\n      {!data && fetching ? (\n        <div>Loading...</div>\n      ) : (\n        <Stack spacing={8}>\n          {data!.posts.map((p) => (\n          <Box key={p.id} p={5} shadow=\"md\" borderWidth=\"1px\">\n          <Heading fontSize=\"xl\">{p.title}</Heading>\n          <Text mt={4}>{p.textSnippet}</Text>\n          </Box>\n          ))}          \n        </Stack>\n      )}\n      {data ? (\n        <Flex>\n          <Button onClick={()=>{\n            setVariables({\n              limit: variables.limit,\n              cursor: data.posts[data.posts.length - 1].createdAt,\n            })\n          }} isLoading={fetching} m=\"auto\" my={6}>Load more</Button>\n        </Flex>\n      ) : null\n    };\n    </Layout>\n    </>\n  );\n};\n\nexport default withUrqlClient(createUrqlClient, { ssr: true })(Index);\n"]},"metadata":{},"sourceType":"module"}