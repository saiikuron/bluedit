{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/s/code/bluedit/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/s/code/bluedit/web/src/pages/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { withUrqlClient } from \"next-urql\";\nimport { createUrqlClient } from \"../utils/createUrqlClient\";\nimport { usePostsQuery } from \"../generated/graphql\";\nimport { Stack, Box, Heading, Text, Flex, Button } from \"@chakra-ui/react\";\nimport { Layout } from '../components/Layout';\n\nvar Index = function Index() {\n  _s();\n\n  var _usePostsQuery = usePostsQuery({\n    variables: {\n      limit: 10\n    }\n  }),\n      _usePostsQuery2 = _slicedToArray(_usePostsQuery, 1),\n      _usePostsQuery2$ = _usePostsQuery2[0],\n      data = _usePostsQuery2$.data,\n      fetching = _usePostsQuery2$.fetching;\n\n  if (!fetching && !data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No posts found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, _this), !data && fetching ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, _this) : /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 8,\n        children: data.posts.map(function (p) {\n          return /*#__PURE__*/_jsxDEV(Box, {\n            p: 5,\n            shadow: \"md\",\n            borderWidth: \"1px\",\n            children: [/*#__PURE__*/_jsxDEV(Heading, {\n              fontSize: \"xl\",\n              children: p.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 11\n            }, _this), /*#__PURE__*/_jsxDEV(Text, {\n              mt: 4,\n              children: p.textSnippet\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 11\n            }, _this)]\n          }, p.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 11\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, _this), data ? /*#__PURE__*/_jsxDEV(Flex, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          isLoading: fetching,\n          m: \"auto\",\n          my: 6,\n          children: \"Load more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, _this) : null, \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, _this)\n  }, void 0, false);\n};\n\n_s(Index, \"OPKuOwJzmPoQUPvR2HBNxOhgzxc=\", false, function () {\n  return [usePostsQuery];\n});\n\n_c = Index;\nexport default withUrqlClient(createUrqlClient, {\n  ssr: true\n})(Index);\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/home/s/code/bluedit/web/src/pages/index.tsx"],"names":["withUrqlClient","createUrqlClient","usePostsQuery","Stack","Box","Heading","Text","Flex","Button","Layout","Index","variables","limit","data","fetching","posts","map","p","title","textSnippet","id","ssr"],"mappings":";;;;;;;;AAAA,SAASA,cAAT,QAA+B,WAA/B;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,OAArB,EAA8BC,IAA9B,EAAoCC,IAApC,EAA0CC,MAA1C,QAAwD,kBAAxD;AACA,SAASC,MAAT,QAAuB,sBAAvB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAAA,uBACWR,aAAa,CAAC;AACzCS,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE;AADE;AAD8B,GAAD,CADxB;AAAA;AAAA;AAAA,MACTC,IADS,oBACTA,IADS;AAAA,MACHC,QADG,oBACHA,QADG;;AAOlB,MAAG,CAACA,QAAD,IAAa,CAACD,IAAjB,EAAsB;AACpB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACD;;AACD,sBACE;AAAA,2BACA,QAAC,MAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA,eADF,EAEG,CAACA,IAAD,IAASC,QAAT,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADD,gBAGC,QAAC,KAAD;AAAO,QAAA,OAAO,EAAE,CAAhB;AAAA,kBACGD,IAAI,CAAEE,KAAN,CAAYC,GAAZ,CAAgB,UAACC,CAAD;AAAA,8BACjB,QAAC,GAAD;AAAgB,YAAA,CAAC,EAAE,CAAnB;AAAsB,YAAA,MAAM,EAAC,IAA7B;AAAkC,YAAA,WAAW,EAAC,KAA9C;AAAA,oCACA,QAAC,OAAD;AAAS,cAAA,QAAQ,EAAC,IAAlB;AAAA,wBAAwBA,CAAC,CAACC;AAA1B;AAAA;AAAA;AAAA;AAAA,qBADA,eAEA,QAAC,IAAD;AAAM,cAAA,EAAE,EAAE,CAAV;AAAA,wBAAcD,CAAC,CAACE;AAAhB;AAAA;AAAA;AAAA;AAAA,qBAFA;AAAA,aAAUF,CAAC,CAACG,EAAZ;AAAA;AAAA;AAAA;AAAA,mBADiB;AAAA,SAAhB;AADH;AAAA;AAAA;AAAA;AAAA,eALJ,EAcGP,IAAI,gBACH,QAAC,IAAD;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAEC,QAAnB;AAA6B,UAAA,CAAC,EAAC,MAA/B;AAAsC,UAAA,EAAE,EAAE,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eADG,GAID,IAlBN;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAyBD,CAnCD;;GAAMJ,K;UACyBR,a;;;KADzBQ,K;AAqCN,eAAeV,cAAc,CAACC,gBAAD,EAAmB;AAAEoB,EAAAA,GAAG,EAAE;AAAP,CAAnB,CAAd,CAAgDX,KAAhD,CAAf","sourcesContent":["import { withUrqlClient } from \"next-urql\";\nimport { createUrqlClient } from \"../utils/createUrqlClient\";\nimport { usePostsQuery } from \"../generated/graphql\";\nimport { Stack, Box, Heading, Text, Flex, Button } from \"@chakra-ui/react\";\nimport { Layout } from '../components/Layout';\n\nconst Index = () => {\n  const [{ data, fetching }] = usePostsQuery({\n    variables: {\n      limit: 10,\n    },\n  });\n\n  if(!fetching && !data){\n    return <div>No posts found.</div>\n  }\n  return (\n    <>\n    <Layout>\n      <br />\n      {!data && fetching ? (\n        <div>Loading...</div>\n      ) : (\n        <Stack spacing={8}>\n          {data!.posts.map((p) => (\n          <Box key={p.id} p={5} shadow=\"md\" borderWidth=\"1px\">\n          <Heading fontSize=\"xl\">{p.title}</Heading>\n          <Text mt={4}>{p.textSnippet}</Text>\n          </Box>\n          ))}          \n        </Stack>\n      )}\n      {data ? (\n        <Flex>\n          <Button isLoading={fetching} m=\"auto\" my={6}>Load more</Button>\n        </Flex>\n      ) : null\n    };\n    </Layout>\n    </>\n  );\n};\n\nexport default withUrqlClient(createUrqlClient, { ssr: true })(Index);\n"]},"metadata":{},"sourceType":"module"}